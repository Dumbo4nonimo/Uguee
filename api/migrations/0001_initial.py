# Generated by Django 5.2.1 on 2025-05-30 16:48

import api.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=255)),
                ('destiny', models.CharField(max_length=255)),
                ('description', models.TextField(validators=[api.validators.length_limit])),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Estudiante'), ('conductor', 'Conductor'), ('institution', 'Institucion'), ('admin', 'Administrador')], max_length=20)),
                ('celular', models.CharField(max_length=20, validators=[api.validators.is_numeric])),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('official_name', models.CharField(max_length=255)),
                ('direccion', models.CharField(max_length=255)),
                ('logo', models.TextField(validators=[api.validators.length_limit])),
                ('colors_set', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conductor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc', models.CharField(max_length=10, unique=True, validators=[api.validators.is_numeric])),
                ('institution_card', models.CharField(max_length=100)),
                ('licence', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institution_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(max_length=50)),
                ('user_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institution_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
                ('admin_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='PassengerRute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rute_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rute')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=7, unique=True, validators=[api.validators.validate_7_characters, api.validators.is_numeric])),
                ('faculty', models.CharField(max_length=100, validators=[api.validators.is_numeric])),
                ('carrer', models.CharField(max_length=100, validators=[api.validators.is_numeric])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conductor_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.conductor')),
                ('student_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student', to_field='code')),
            ],
        ),
        migrations.CreateModel(
            name='Travel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=50)),
                ('startPoint', models.CharField(max_length=255)),
                ('date_to_out', models.DateTimeField(auto_now_add=True)),
                ('rute_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rute')),
            ],
        ),
        migrations.CreateModel(
            name='PassengerTravel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('travel_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.travel')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField()),
                ('comentary', models.TextField(validators=[api.validators.length_limit])),
                ('grade_date', models.DateTimeField(auto_now_add=True)),
                ('passenger_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.passenger')),
                ('travel_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.travel')),
            ],
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_state', models.CharField(max_length=50)),
                ('validation_date', models.DateTimeField(auto_now_add=True)),
                ('travel_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.travel')),
                ('user_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QR_vehicle', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=50)),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('plate', models.CharField(max_length=20)),
                ('soat', models.DateField()),
                ('tecno', models.DateField()),
                ('conductor_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.conductor')),
            ],
        ),
        migrations.AddField(
            model_name='travel',
            name='vehicle_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vehicle'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('coordinates', models.CharField(max_length=100)),
                ('rute_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.rute')),
                ('vehicle_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vehicle')),
            ],
        ),
    ]
